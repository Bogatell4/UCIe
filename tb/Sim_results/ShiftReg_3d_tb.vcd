$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module ShiftReg_3d_tb $end
   $var wire 32 0 DATA_BIT_WIDTH [31:0] $end
   $var wire 1 , clk $end
   $var wire 1 - reset $end
   $var wire 1 . enable $end
   $var wire 8 / d_i [7:0] $end
   $var wire 8 # q_o [7:0] $end
   $var wire 1 $ enable_ack $end
   $var wire 1 % valid_o $end
   $scope module uut $end
    $var wire 32 0 DATA_BIT_WIDTH [31:0] $end
    $var wire 1 , clk $end
    $var wire 1 - reset $end
    $var wire 1 . enable $end
    $var wire 1 $ enable_ack $end
    $var wire 1 % valid_o $end
    $var wire 8 / d_i [7:0] $end
    $var wire 8 # q_o [7:0] $end
    $var wire 8 & sync_r[0] [7:0] $end
    $var wire 8 ' sync_r[1] [7:0] $end
    $var wire 8 ( sync_r[2] [7:0] $end
    $var wire 1 $ enable_ack_r $end
    $var wire 1 ) valid_r[0] $end
    $var wire 1 * valid_r[1] $end
    $var wire 1 + valid_r[2] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000 #
0$
0%
b00000000 &
b00000000 '
b00000000 (
0)
0*
0+
0,
1-
0.
b00000000 /
b00000000000000000000000000001000 0
#5
1,
#10
0,
#15
1,
#20
0,
0-
#25
1,
#30
0,
1.
b10101010 /
#35
1$
b10101010 &
1)
1,
#40
0,
0.
#45
0$
b10101010 '
0)
1*
1,
#50
0,
#55
b10101010 #
1%
b10101010 (
0*
1+
1,
#60
0,
#65
0%
0+
1,
#70
0,
1.
b01100110 /
#75
1$
b01100110 &
1)
1,
#80
0,
0.
#85
0$
b01100110 '
0)
1*
1,
#90
0,
#95
b01100110 #
1%
b01100110 (
0*
1+
1,
#100
0,
#105
0%
0+
1,
#110
b00000000 #
b00000000 &
b00000000 '
b00000000 (
0,
1-
#115
1,
#120
0,
0-
#125
1,
#130
0,
#135
1,
#140
0,
#145
1,
#150
0,
#155
1,
#160
0,
#165
1,
#170
0,
